# Launch a new command prompt
cd $HOME/kafkacode
ls
unzip 1simple_producer.zip
ls
cd 1simple_producer/KafkaProducerDemo/
mvn package
ls -lh target/
cd target
# notice the jar with the dependency
docker cp KafkaProducerDemo-0.0.1-SNAPSHOT-jar-with-dependencies.jar multinodekafka_kafka1_1:/


# Launch a new command prompt
docker exec -it multinodekafka_kafka1_1 bash
# create the topic
kafka-topics.sh --create --bootstrap-server kafka1:9092 --partitions 3 --replication-factor 2 --topic first_topic
# start the consumer with metadata print option
kafka-console-consumer.sh --bootstrap-server kafka1:9092 --topic first_topic --property "print.key=true" --property "print.offset=true"  --property "print.partition=true" --from-beginning --group newgrp

# Start a new terminal and start another consumer
docker exec -it multinodekafka_kafka1_1 bash
# start the consumer with metadata print option
kafka-console-consumer.sh --bootstrap-server kafka1:9092 --topic first_topic --property "print.key=true" --property "print.offset=true"  --property "print.partition=true" --from-beginning --group newgrp

# start a new terminal
docker exec -it multinodekafka_kafka1_1 bash
# running the producer Jar
ls 
java -jar KafkaProducerDemo-0.0.1-SNAPSHOT-jar-with-dependencies.jar 

# You should see 2 messages consumed on the console consumer

# running the producer Jar
java -jar KafkaProducerDemo-0.0.1-SNAPSHOT-jar-with-dependencies.jar


# run the producer few more times and observe the console consumer
java -jar KafkaProducerDemo-0.0.1-SNAPSHOT-jar-with-dependencies.jar
java -jar KafkaProducerDemo-0.0.1-SNAPSHOT-jar-with-dependencies.jar
java -jar KafkaProducerDemo-0.0.1-SNAPSHOT-jar-with-dependencies.jar

# Everytime the producer jar is executed, the consumer will receive 2 messages
# notice the routing of message with & without key, observe the difference
